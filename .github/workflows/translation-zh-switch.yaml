name: ZH cloud translation switch

on:
  workflow_dispatch:
    inputs:
      from:
        description: "The last zh source branch. e.g. i18n-zh-release-8.1"
        required: true
      to:
        description: "The target zh source branch. e.g. i18n-zh-release-8.5"
        required: true
      to_base:
        description: "The base branch. e.g. release-8.5"
        required: true

jobs:
  zh-translation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Download translator repo
        with:
          repository: "shczhen/markdown-translator"
          ref: "openai"
          path: "markdown-translator"

      - uses: actions/checkout@v4
        name: Checkout from branch and create target branch
        with:
          ref: "${{ github.event.inputs.from }}"
          path: "docs"

      - name: Create target branch
        run: |
          cd docs
          git checkout -b "${{ github.event.inputs.to }}"
          git push origin "${{ github.event.inputs.to }}"
          cd ..

      - name: Force merge to_base branch excluding tidb-cloud folder
        run: |
          cd docs
          git config user.name github-actions
          git config user.email github-actions@github.com

          # Fetch the to_base branch
          git fetch origin "${{ github.event.inputs.to_base }}"

          # Simple and reliable approach: merge everything first, then restore tidb-cloud

          # Store the current target branch state before merge
          TARGET_BRANCH_HEAD=$(git rev-parse HEAD)

          # Create a temporary branch from to_base
          git checkout -b temp-merge-branch "origin/${{ github.event.inputs.to_base }}"

          # Switch back to target branch
          git checkout "${{ github.event.inputs.to }}"

          # Merge the temporary branch with allow-unrelated-histories
          git merge temp-merge-branch --no-edit --allow-unrelated-histories -X theirs

          # After merge, restore tidb-cloud folder from the original target branch state
          # Use the stored commit hash to restore the original tidb-cloud folder
          git checkout $TARGET_BRANCH_HEAD -- tidb-cloud/ || true

          # If there are any conflicts in tidb-cloud, resolve them by keeping the target branch version
          git add tidb-cloud/ || true

          # Clean up temporary branch
          git branch -D temp-merge-branch

          # Get the latest filterCloudInitFiles.js from master branch
          git fetch origin master
          git checkout origin/master -- scripts/filterCloudInitFiles.js || true

          # Push the changes
          git push origin "${{ github.event.inputs.to }}"
          cd ..

      - name: Update latest_translation_commit.json
        run: |
          cd docs
          # Get the latest commit SHA from to_base branch
          TO_BASE_SHA=$(git rev-parse origin/${{ github.event.inputs.to_base }})
          echo '{"target":"${{ github.event.inputs.to_base }}","sha":"'$TO_BASE_SHA'"}' > latest_translation_commit.json
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add latest_translation_commit.json
          git commit -m "ci: update latest_translation_commit.json for ${{ github.event.inputs.to_base }}"
          git push origin "${{ github.event.inputs.to }}"
          cd ..

      - uses: actions/setup-node@v4
        name: Setup node 18
        with:
          node-version: 18

      - run: |
          sudo apt install tree -y

      - name: Download files by comparing commits
        run: |
          export GH_TOKEN=${{github.token}}
          cd docs
          npm i
          node scripts/filterCloudInitFiles.js
          tree tmp
          cd ..

      - name: Copy new files to translator folder
        run: |
          cp -r docs/tmp markdown-translator/markdowns

      - name: Copy variables.json to translator folder
        run: |
          cp docs/tmp/variables.json docs/variables.json || true

      - name: Config and translate
        run: |
          cd markdown-translator
          export LANGLINK_ACCESS_KEY=${{ secrets.LANGLINK_ACCESS_KEY }}
          export LANGLINK_ACCESS_SECRET=${{ secrets.LANGLINK_ACCESS_SECRET }}
          export LANGLINK_USER=${{ secrets.LANGLINK_USER }}
          yarn
          node src/index.js
          cd ..

      - name: Copy translated files to docs repo
        run: |
          cp -r markdown-translator/output/markdowns/* docs/

      - name: Set build ID
        id: build_id
        run: echo "::set-output name=id::$(date +%s)"

      - name: Create PR
        uses: peter-evans/create-pull-request@v7
        with:
          path: "docs"
          token: ${{ github.token }}
          branch: zh-translation/${{ steps.build_id.outputs.id }}
          base: "${{ github.event.inputs.to }}"
          title: "ci: ZH translation ${{ steps.build_id.outputs.id }}"
          body: |
            ### What is changed, added or deleted? (Required)

            Translate docs to Chinese.

            ### Which TiDB version(s) do your changes apply to? (Required)

            <!-- Fill in "x" in [] to tick the checkbox below.-->

            **Tips for choosing the affected version(s):**

            By default, **CHOOSE MASTER ONLY** so your changes will be applied to the next TiDB major or minor releases. If your PR involves a product feature behavior change or a compatibility change, **CHOOSE THE AFFECTED RELEASE BRANCH(ES) AND MASTER**.

            For details, see [tips for choosing the affected versions](https://github.com/pingcap/docs/blob/master/CONTRIBUTING.md#guideline-for-choosing-the-affected-versions).

            - [x] ${{ github.event.inputs.to }}

            ### What is the related PR or file link(s)?

            <!--Reference link(s) will help reviewers review your PR quickly.-->

            - This PR is translated from: en
            - Other reference link(s):

            ### Do your changes match any of the following descriptions?

            - [ ] Delete files
            - [ ] Change aliases
            - [ ] Need modification after applied to another branch <!-- If yes, please comment "/label version-specific-changes-required" below to trigger the bot to add the label. -->
            - [ ] Might cause conflicts after applied to another branch
          delete-branch: true
